#!/bin/bash

set -e

cd "${1}"

exec 3>&1
exec 1>&2
set +x

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp /tmp/resource-out.XXXXXX)

cat > "${payload}" <&0

sonar_host_url=$(jq -r '.source.host_url // ""' < "${payload}")
if [ -z "${sonar_host_url}" ]; then
  echo "host_url param has not been specified."
  exit 1
fi

sonar_login=$(jq -r '.source.login // ""' < "${payload}")
if [ -z "${sonar_login}" ]; then
  echo "login param has not been specified."
  exit 1
fi

ce_task_id=$(jq -r '.version.ce_task_id // ""' < "${payload}")
if [ -z "${ce_task_id}" ]; then
  echo "no version (ce_task_id)."
  exit 1
fi

# wait for analysis to be complete
ce_task_info="./ce_task.json"
ce_task_status="PENDING"
until [ "${ce_task_status}" != "PENDING" ] && [ "${ce_task_status}" != "IN_PROGRESS" ]; do
  curl -s -u "${sonar_login}:" -L -o "${ce_task_info}" "${sonar_host_url}/api/ce/task?id=${ce_task_id}"
  ce_task_status=$(jq -r '.task.status // ""' < "${ce_task_info}")
  if [ "${ce_task_status}" == "PENDING" ] || [ "${ce_task_status}" == "IN_PROGRESS" ]; then
    echo "Waiting for compute engine result (sleep: 5s)..."
    sleep 5 # Poll SonarQube compute engine task every 5 seconds.
  fi
done

analysis_id=""
if [ "${ce_task_status}" == "SUCCESS" ]; then
  analysis_id=$(jq -r '.task.analysisId // ""' < "${ce_task_info}")
  if [ -z "${analysis_id}" ]; then
    echo "error: No analysis ID could be fetched from compute engine task result"
    exit 1
  fi
fi

curl -s -u "${sonar_login}:" -L -o sonar-qualitygates-status.json "${sonar_host_url}/api/qualitygates/project_status?analysisId=${analysis_id}"

project_status=$(jq -r '.projectStatus.status' < "sonar-qualitygates-status.json")

jq -n "{
  version: { \"analysis_id\": \"${analysis_id}\" },
  metadata: [
    { name: \"ce_task_status\", value: \"${ce_task_status}\" },
    { name: \"project_status\", value: \"${project_status:?}\" }
  ]
}" >&3
